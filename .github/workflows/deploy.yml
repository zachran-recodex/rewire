name: deploy

on:
  workflow_run:
    workflows: ["tests"]
    types:
      - completed
    branches:
      - master
  push:
    branches:
      - deploy

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: Production
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Add Flux Credentials
        run: composer config http-basic.composer.fluxui.dev "${{ secrets.FLUX_USERNAME }}" "${{ secrets.FLUX_LICENSE_KEY }}"

      - name: Install Dependencies
        run: composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

      - name: Install Node Dependencies
        run: npm ci

      - name: Build Assets
        run: npm run build

      - name: Create deployment archive
        run: |
          # Remove development files and folders
          rm -rf .git .github node_modules .env.example
          rm -f .gitignore .gitattributes phpunit.xml

          # Create tarball
          tar -czf deploy.tar.gz .

      - name: Upload and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Create backup of current deployment
            if [ -d "/var/www/rewire.web.id/html" ]; then
              sudo cp -r /var/www/rewire.web.id/html /var/www/rewire.web.id/backup-$(date +%Y%m%d_%H%M%S)
            fi

            # Prepare deployment directory
            sudo mkdir -p /var/www/rewire.web.id/html
            cd /var/www/rewire.web.id/html

            # Enable maintenance mode (if Laravel app exists)
            if [ -f "artisan" ]; then
              php artisan down || true
            fi

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "deploy.tar.gz"
          target: "/tmp/"

      - name: Extract and setup application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Extract files
            cd /var/www/rewire.web.id
            sudo tar -xzf /tmp/deploy.tar.gz

            # Copy environment file if it doesn't exist
            if [ ! -f ".env" ]; then
              if [ -f "../backup-*/env" ]; then
                sudo cp ../backup-*/.env . || true
              else
                sudo cp .env.example .env
                echo "‚ö†Ô∏è  Please configure .env file manually"
              fi
            fi

            # Generate app key if needed
            if ! grep -q "APP_KEY=" .env || [ -z "$(grep APP_KEY= .env | cut -d= -f2)" ]; then
              php artisan key:generate --force
            fi

            # Install/update composer dependencies (production only)
            composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

            # Clear and optimize Laravel caches
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            php artisan cache:clear

            # Run database migrations
            php artisan migrate --force

            # Optimize Laravel for production
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize

            # Set proper file permissions
            sudo chown -R www-data:www-data /var/www/rewire.web.id
            sudo chmod -R 755 /var/www/rewire.web.id
            sudo chmod -R 775 /var/www/rewire.web.id/storage
            sudo chmod -R 775 /var/www/rewire.web.id/bootstrap/cache

            # Restart services
            sudo systemctl reload nginx
            sudo systemctl restart php8.2-fpm

            # Disable maintenance mode
            php artisan up

            # Clean up
            rm -f /tmp/deploy.tar.gz

            echo "üöÄ Deployment completed successfully!"

      - name: Deployment Health Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Check if website is responding
            if curl -s -o /dev/null -w "%{http_code}" https://rewire.web.id | grep -q "200\|301\|302"; then
              echo "‚úÖ Website is responding correctly"
            else
              echo "‚ùå Website health check failed"
              exit 1
            fi

      - name: Notify Deployment Status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "‚úÖ Deployment successful to https://rewire.web.id"
          else
            echo "‚ùå Deployment failed"
          fi
