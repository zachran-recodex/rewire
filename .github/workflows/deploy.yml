name: deploy

on:
  push:
    branches:
      - deploy
  workflow_dispatch: # Allow manual deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          ssh-keyscan -H 103.197.191.32 >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          ssh zachranraze@103.197.191.32 << 'EOF'
            set -e

            # Navigate to web directory
            cd /var/www/rewire.web.id

            # Pull latest changes
            git pull origin deploy

            # Set proper permissions for git
            sudo chown -R zachranraze:zachranraze .

            # Install/update composer dependencies
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev

            # Install/update npm dependencies
            npm ci --only=production

            # Build production assets
            npm run build

            # Clear and cache Laravel configurations
            php artisan config:clear
            php artisan config:cache
            php artisan route:clear
            php artisan route:cache
            php artisan view:clear
            php artisan view:cache

            # Run database migrations (if needed)
            php artisan migrate --force

            # Clear application cache
            php artisan cache:clear

            # Set proper ownership and permissions
            sudo chown -R www-data:www-data /var/www/rewire.web.id
            sudo chmod -R 755 /var/www/rewire.web.id
            sudo chmod -R 775 /var/www/rewire.web.id/storage
            sudo chmod -R 775 /var/www/rewire.web.id/bootstrap/cache

            # Restart services
            sudo systemctl reload nginx
            sudo systemctl restart php8.2-fpm

            echo "Deployment completed successfully!"
          EOF

      - name: Health Check
        run: |
          # Wait a moment for services to fully restart
          sleep 10

          # Check if the website is responding
          if curl -f -s --max-time 30 https://rewire.web.id > /dev/null; then
            echo "✅ Website is accessible and responding"
          else
            echo "❌ Website health check failed"
            exit 1
          fi

      - name: Notify Deployment Status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "🚀 Deployment to production completed successfully!"
          else
            echo "💥 Deployment failed. Please check the logs."
            exit 1
          fi
